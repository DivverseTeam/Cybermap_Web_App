
name: Build, Push to ECR, and Deploy to Docker Compose - EC2

on:
  push:
    branches:
      - development

env:
  AWS_REGION: us-east-1
  CYBERMAP_ECR: 442042540581.dkr.ecr.us-east-1.amazonaws.com/cybermap
  DATABASE_URI: mongodb+srv://dbAdmin:UZkn2a7LY1QVflTs@cybermap.3sb8r.mongodb.net/cybermap?retryWrites=true&w=majority&appName=cybermap
  NEXTAUTH_SECRET: "secret"
  AUTH_TRUST_HOST: true
  DISCORD_CLIENT_ID: "dsd"
  DISCORD_CLIENT_SECRET: "dsd"
  S3_REGION: "null"
  S3_ACCESS_KEY: "null"
  S3_SECRET_KEY: "null"
  S3_BUCKET_NAME: "null"

  REGION: us-east-1
  APP_CLIENT_ID: 5935eo5ka6uqrnk46cq092htth
  BASE_URL: http://localhost:3000

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: "${{ secrets.ACCESS_KEY }}" 
          aws-secret-access-key: "${{ secrets.SECRET_KEY }}" 
          aws-region: "${{ env.AWS_REGION }}"

      - name: Login to Amazon ECR
        id: ecr-login
        run: |
          aws ecr get-login-password --region "${{ env.AWS_REGION }}" | docker login --username AWS --password-stdin "${{ env.CYBERMAP_ECR }}"

      - name: Build Docker image
        run: |
          echo "AWS_REGION=${AWS_REGION}" >> .env
          echo "CYBERMAP_ECR=${CYBERMAP_ECR}" >> .env
          echo "DATABASE_URI=${DATABASE_URI}" >> .env
          echo "NEXTAUTH_SECRET=${NEXTAUTH_SECRET}" >> .env
          echo "AUTH_TRUST_HOST=${AUTH_TRUST_HOST}" >> .env
          echo "DISCORD_CLIENT_ID=${DISCORD_CLIENT_ID}" >> .env
          echo "DISCORD_CLIENT_SECRET=${DISCORD_CLIENT_SECRET}" >> .env
          echo "S3_REGION=${S3_REGION}" >> .env
          echo "S3_ACCESS_KEY=${S3_ACCESS_KEY}" >> .env
          echo "S3_SECRET_KEY=${S3_SECRET_KEY}" >> .env
          echo "S3_BUCKET_NAME=${S3_BUCKET_NAME}" >> .env
          echo "AZURE_CLIENT_ID=${{ secrets.AZURE_CLIENT_ID }}" >> .env
          echo "AZURE_CLIENT_SECRET=${{ secrets.AZURE_CLIENT_SECRET }}" >> .env
          echo "AZURE_AD_TENANT_ID=${AZURE_AD_TENANT_ID}" >> .env
          echo "APP_CLIENT_ID=${{ secrets.APP_CLIENT_ID}}" >> .env
          echo "BASE_URL=${BASE_URL}" >> .env
          echo "ACCESS_KEY_ID=${{ secrets.ACCESS_KEY }}" >>.env
          echo "SECRET_ACCESS_KEY=${{ secrets.SECRET_KEY }}" >>.env
          cat .env > .env.production
          ls -alh
          docker build -t cybermap .

      - name: Tag Docker image
        run: |
          docker tag cybermap:latest "${{ env.CYBERMAP_ECR }}:latest"

      - name: Push Docker image to Amazon ECR
        run: |
          docker push "${{ env.CYBERMAP_ECR }}:latest"

  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.PROD_SSH_PRIVATE_KEY }}

      - name: Write private key to file
        run: |
          echo "${{ secrets.PROD_SSH_PRIVATE_KEY }}" > /tmp/private_key
          chmod 600 /tmp/private_key

      - name: Add SSH key
        run: |
          eval "$(ssh-agent -s)"
          ssh-add /tmp/private_key

      - name: Deploy to server
        run: |
          ssh -i /tmp/private_key -o StrictHostKeyChecking=no ubuntu@3.235.83.252 << 'EOF'
            export AWS_REGION=${AWS_REGION}
            export CYBERMAP_ECR=${CYBERMAP_ECR}
            aws ecr get-login-password --region "${{ env.AWS_REGION }}" | docker login --username AWS --password-stdin "${{ env.CYBERMAP_ECR }}"
            docker image prune -a -f
            docker pull "${{ env.CYBERMAP_ECR }}:latest"
            docker compose down
            docker compose up -d
          EOF
